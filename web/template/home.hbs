{% extends "base.hbs" %}
{% block content %}

<div class="card my-3">
  <div class="card-header h1">
    Ahoj!
  </div>
  <div class="card-body">
    <p class=""><b>AROM</b> (<b>a</b>utonomous <b>r</b>obotic <b>o</b>bservatory <b>m</b>anager)</p>
  </div>
</div>

<div class="card">
    <div class="card-header h2">
        {% import psutil %}
        System info
    </div>



    <div class="card-body">
        CPU percent: {{psutil.cpu_percent(interval=1, percpu=True)}} <br>
        VirtualMem: {{psutil.virtual_memory().percent}}% <br>
        SwapMem: {{psutil.swap_memory().percent}}% <br>
    </div>
    <hr>
    <div class="card-body">
        {% for net in psutil.net_io_counters(pernic=True) %}
        Net badwidth {{net}}: <small>{{psutil.net_io_counters(pernic=True)[net]}}</small> <br>
        {% end %}
    </div>
    <hr>
    <div class="card-body">
        {% for net in psutil.net_if_addrs() %}
        Net <l>{{net}}</l>:  ({% for a in psutil.net_if_addrs()[net] %}{{a.address}}, {%end%})<br>
        {% end %}
    </div>
    <hr>
    <div class="card-body">
        {% for disc in psutil.disk_io_counters(perdisk=True) %}
        Disc 	{{disc}}: <small> {{psutil.disk_io_counters(perdisk=True)[disc]}}</small><br>
        {% end %}
    </div>
    <hr>
    <div class="card-body">
        boottime {{datetime.datetime.fromtimestamp(psutil.boot_time()).strftime('%Y-%m-%d %H:%M:%S')}}<br>
    </div>
</div>

{% end %}
